{"version":3,"file":"static/js/80.132a262e.chunk.js","mappings":"gNAIe,SAASA,EAAQC,GAC9B,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAa,SAACJ,GACdA,IACFE,GAASG,EAAAA,EAAAA,IAAQL,IACjBC,EAAW,MAIf,OACE,+BACE,gBAAKK,UAAW,sGAAhB,UACE,kBACEC,SAAU,SAACC,GACTA,EAAEC,iBACFL,EAAWJ,IAHf,WAME,kBACEU,KAAM,OACNC,YAAY,uBACZC,MAAOZ,EACPa,SAAU,SAACL,GACTP,EAAWO,EAAEM,OAAOF,QAEtBN,UAAW,yEAEb,mBACEA,UAAW,kCACXS,QAAS,WACPX,EAAWJ,IAHf,wB,aC3BK,SAASgB,EAASlB,GAC/B,IAAMmB,EAAOnB,EAAMmB,KACbC,EAAQpB,EAAMoB,MACdC,EAAUF,EAAKE,UAAYC,EAAAA,EAAAA,UACjC,GAAgCrB,EAAAA,EAAAA,UAASoB,GAAzC,eAAOE,EAAP,KAAkBC,EAAlB,KACMpB,GAAWC,EAAAA,EAAAA,MACXoB,EAAeF,EAAY,eAAiB,GAElD,OACE,iBACEf,UACE,yHAFJ,WAKE,iBAAKA,UAAW,OAAhB,UAAyBY,EAAzB,QACA,gBAAKZ,UAAW,cAAhB,UACE,mBAAOA,UAAW,mCAAlB,WACE,kBACEA,UAAU,iHACVI,KAAK,WACLE,MAAOS,EACPF,QAASE,EACTR,SAAU,SAACL,GACT,IAAMa,EAAYb,EAAEM,OAAOK,QAC3BG,EAAWD,GACXnB,GACEsB,EAAAA,EAAAA,IAAS,CACPC,GAAIR,EAAKQ,GACTN,QAASE,SAKjB,iBAAMf,UAAWiB,EAAe,kBAAhC,SAAoDN,EAAKjB,gBAG7D,gBAAKM,UAAW,sBAAhB,UACE,gBACEoB,MAAM,SACNX,QAAS,WACPb,GAASyB,EAAAA,EAAAA,IAAWV,EAAKQ,MAH7B,yBCxCO,SAASG,EAAS9B,GAC/B,IAAM+B,EAAQ/B,EAAM+B,OAAS,GAC7B,OACE,gBAAKvB,UAAW,gBAAhB,SACGuB,EAAMC,KAAI,SAACb,EAAMC,GAAP,OACT,SAACF,EAAD,CAAsBC,KAAMA,EAAMC,MAAOA,EAAQ,GAAlCA,QCAR,SAASa,EAAKjC,GAC3B,IAAMkC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,SAASH,SACjD3B,GAAWC,EAAAA,EAAAA,MAUjB,OARAgC,EAAAA,EAAAA,YAAU,WAGR,OAFAjC,GAASkC,EAAAA,EAAAA,OAEF,WACLlC,GAASmC,EAAAA,EAAAA,UAEV,KAGD,iCACE,SAACC,EAAA,EAAD,CAAcZ,MAAM,WACpB,gBAAKpB,UAAW,iBAAhB,UACE,iBAAKA,UAAW,eAAhB,WACE,gBAAKA,UAAW,sBAAhB,sBACA,SAACT,EAAD,KACA,SAAC+B,EAAD,CAAUC,MAAOG","sources":["Cores/Modules/Portals/Todo/AddTodo.js","Cores/Modules/Portals/Todo/TodoItem.js","Cores/Modules/Portals/Todo/TodoList.js","Cores/Modules/Portals/Todo/Todo.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { addTodo } from '../../../Stores/reducers/todoSlice'\r\n\r\nexport default function AddTodo(props) {\r\n  const [content, setContent] = useState('')\r\n  const dispatch = useDispatch()\r\n  const addNewTodo = (content) => {\r\n    if (content) {\r\n      dispatch(addTodo(content))\r\n      setContent('')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={'relative shadow-md my-2 px-2 py-2 rounded max-w-full dark:bg-white dark:shadow dark:shadow-gray-400'}>\r\n        <form\r\n          onSubmit={(e) => {\r\n            e.preventDefault()\r\n            addNewTodo(content)\r\n          }}\r\n        >\r\n          <input\r\n            type={'text'}\r\n            placeholder=\"Type content here...\"\r\n            value={content}\r\n            onChange={(e) => {\r\n              setContent(e.target.value)\r\n            }}\r\n            className={'focus:outline-none py-1 px-2 pr-[60px] w-full max-w-full text-black'}\r\n          ></input>\r\n          <button\r\n            className={'btn-blue absolute top-1 right-2'}\r\n            onClick={() => {\r\n              addNewTodo(content)\r\n            }}\r\n          >\r\n            Add\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Todo_status } from '../../../Models/todo.enums'\r\nimport { editTodo, removeTodo } from '../../../Stores/reducers/todoSlice'\r\n\r\nexport default function TodoItem(props) {\r\n  const item = props.item\r\n  const index = props.index\r\n  const checked = item.checked === Todo_status.completed\r\n  const [isChecked, setChecked] = useState(checked)\r\n  const dispatch = useDispatch()\r\n  const contentClass = isChecked ? 'line-through' : '';\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        'flex mt-2 p-2 border-b border-b-gray-600 shadow dark:shadow-gray-200 hover:shadow-md justify-center rounded transition'\r\n      }\r\n    >\r\n      <div className={'w-10'}>{index}.</div>\r\n      <div className={'mr-2 flex-1'}>\r\n        <label className={'flex items-center cursor-pointer'}>\r\n          <input\r\n            className=\"text-indigo-500 cursor-pointer mr-2 focus:ring-indigo-400 focus:ring-opacity-25 border border-gray-300 rounded\"\r\n            type=\"checkbox\"\r\n            value={isChecked}\r\n            checked={isChecked}\r\n            onChange={(e) => {\r\n              const isChecked = e.target.checked\r\n              setChecked(isChecked)\r\n              dispatch(\r\n                editTodo({\r\n                  id: item.id,\r\n                  checked: isChecked,\r\n                }),\r\n              )\r\n            }}\r\n          />\r\n          <span className={contentClass + ' cursor-pointer'}>{item.content}</span>\r\n        </label>\r\n      </div>\r\n      <div className={'flex cursor-pointer'}>\r\n        <div\r\n          title=\"Remove\"\r\n          onClick={() => {\r\n            dispatch(removeTodo(item.id))\r\n          }}\r\n        >\r\n          ‚ùå\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import TodoItem from './TodoItem'\r\n\r\nexport default function TodoList(props) {\r\n  const items = props.items || []\r\n  return (\r\n    <div className={'flex flex-col'}>\r\n      {items.map((item, index) => (\r\n        <TodoItem key={index} item={item} index={index + 1}></TodoItem>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { loadTodo, saveTodo } from '../../../Stores/reducers/todoSlice'\r\nimport ContentTitle from '../ContentTitle'\r\nimport AddTodo from './AddTodo'\r\nimport TodoList from './TodoList'\r\n\r\nexport default function Todo(props) {\r\n  const todoList = useSelector((state) => state.todoList.items)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(loadTodo())\r\n\r\n    return () => {\r\n      dispatch(saveTodo())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <ContentTitle title=\"To Do\"></ContentTitle>\r\n      <div className={'card-container'}>\r\n        <div className={'card-content'}>\r\n          <div className={'font-medium text-lg'}>My List</div>\r\n          <AddTodo></AddTodo>\r\n          <TodoList items={todoList}></TodoList>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"],"names":["AddTodo","props","useState","content","setContent","dispatch","useDispatch","addNewTodo","addTodo","className","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","onClick","TodoItem","item","index","checked","Todo_status","isChecked","setChecked","contentClass","editTodo","id","title","removeTodo","TodoList","items","map","Todo","todoList","useSelector","state","useEffect","loadTodo","saveTodo","ContentTitle"],"sourceRoot":""}